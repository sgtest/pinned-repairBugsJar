{
  "files": 1, 
  "nb_test": 17, 
  "nb_error": 0, 
  "classification": {
    "singleLine": false
  }, 
  "failing_tests": [
    "testDateFieldsWithDateModels(org.apache.wicket.extensions.yui.calendar.DatePickerTest): expected:<1[4].06.11> but was:<1[5].06.11>"
  ], 
  "patch": "diff --git a/wicket-datetime/src/main/java/org/apache/wicket/extensions/yui/calendar/DateTimeField.java b/wicket-datetime/src/main/java/org/apache/wicket/extensions/yui/calendar/DateTimeField.java\nindex 2534f48..13b9cb8 100644\n--- a/wicket-datetime/src/main/java/org/apache/wicket/extensions/yui/calendar/DateTimeField.java\n+++ b/wicket-datetime/src/main/java/org/apache/wicket/extensions/yui/calendar/DateTimeField.java\n@@ -435,19 +435,15 @@ protected void onBeforeRender()\n \t\t}\n \t\telse\n \t\t{\n-\t\t\tMutableDateTime mDate;\n+\t\t\tMutableDateTime mDate = new MutableDateTime(modelObject);\n \t\t\t// convert date to the client's time zone if we have that info\n \t\t\tTimeZone zone = getClientTimeZone();\n \t\t\tif (zone != null)\n \t\t\t{\n-\t\t\t\tmDate = new MutableDateTime(modelObject, DateTimeZone.forTimeZone(zone));\n-\t\t\t}\n-\t\t\telse\n-\t\t\t{\n-\t\t\t\tmDate = new MutableDateTime(modelObject);\n+\t\t\t\tmDate.setZone(DateTimeZone.forTimeZone(zone));\n \t\t\t}\n \n-\t\t\tdate = mDate.toDate();\n+\t\t\tdate = mDate.toDateTime().toLocalDate().toDate();\n \n \t\t\tif (use12HourFormat)\n \t\t\t{\n", 
  "project": "wicket", 
  "linesAdd": 3, 
  "jira_id": "5204", 
  "nb_skipped": 0, 
  "commit": "9e6efa61", 
  "nb_failure": 1, 
  "linesRem": 7
}