{
  "files": 2, 
  "nb_test": 1461, 
  "nb_error": 3, 
  "classification": {
    "singleLine": false
  }, 
  "failing_tests": [
    "testInlineEnclosureAjaxPage(org.apache.wicket.markup.html.internal.TogglePageTest): pattern '<tr id=\"wicket_InlineEnclosure-0\" style=\"display:none\"></tr>' not found in:(..)", 
    "inlineEnclosuresAreResolvedOnceOnly(org.apache.wicket.markup.html.internal.InlineEnclosureTest): expected:<2> but was:<4>", 
    "inlineEnclosurePage_1(org.apache.wicket.markup.html.internal.InlineEnclosureTest): org/apache/wicket/markup/html/internal/InlineEnclosurePageExpectedResult_1.html expected:<...ket_InlineEnclosure-[0\"> <span>Test Label 1</span> </span>(..)", 
    "inlineEnclosurePage_2(org.apache.wicket.markup.html.internal.InlineEnclosureTest): org/apache/wicket/markup/html/internal/InlineEnclosurePageExpectedResult_2.html expected:<...ket_InlineEnclosure-[0\"><span>Test Label 1</span>(..)", 
    "inlineEnclosurePanelPage(org.apache.wicket.markup.html.internal.InlineEnclosureTest): org/apache/wicket/markup/html/internal/InlineEnclosurePanelPageExpectedResult.html expected:<...ket_InlineEnclosure-[0\">(..)", 
    "inlineEnclosurePageDifferentNamespace(org.apache.wicket.markup.html.internal.InlineEnclosureTest): org/apache/wicket/markup/html/internal/InlineEnclosureDifferentNamespaceExpectedResult.html expected:<...=\"w_InlineEnclosure-[0\"><span>Test Label 1</span>(..)", 
    "inlineEnclosureWithWicketMessageVisible(org.apache.wicket.markup.html.internal.InlineEnclosureTest): org/apache/wicket/markup/html/internal/InlineEnclosureWithWicketMessagePage_visible_expected.html expected:<...wicket_message_attr_[]\" title=\"Some title\"...> but was:<...wicket_message_attr_[1]\" title=\"Some title\"...>", 
    "inlineEnclosureWithWicketMessageInvisible(org.apache.wicket.markup.html.internal.InlineEnclosureTest): org/apache/wicket/markup/html/internal/InlineEnclosureWithWicketMessagePage_invisible_expected.html expected:<...wicket_message_attr_[]\" style=\"display:non...> but was:<...wicket_message_attr_[1]\" style=\"display:non...>", 
    "ajaxTogglingControllingChildShouldToggleInlineEnclosure(org.apache.wicket.markup.html.internal.AjaxEnclosureTest): pattern '<div id=\"wicket_InlineEnclosure-0\" style=\"display:none\"></div>' not found in:(..)", 
    "ajaxTogglingNonControllingChildShouldNotToggleEnclosure(org.apache.wicket.markup.html.internal.AjaxEnclosureTest)", 
    "nestedInlineEnclosuresShouldToggleNormally(org.apache.wicket.markup.html.internal.AjaxEnclosureTest)", 
    "controllingChildShouldDefaultToTheSingleComponentInsideEnclosure(org.apache.wicket.markup.html.internal.AjaxEnclosureTest)"
  ], 
  "patch": "diff --git a/wicket-core/src/main/java/org/apache/wicket/markup/html/internal/InlineEnclosure.java b/wicket-core/src/main/java/org/apache/wicket/markup/html/internal/InlineEnclosure.java\nindex 6ce1edc..3e4d230 100644\n--- a/wicket-core/src/main/java/org/apache/wicket/markup/html/internal/InlineEnclosure.java\n+++ b/wicket-core/src/main/java/org/apache/wicket/markup/html/internal/InlineEnclosure.java\n@@ -19,7 +19,6 @@\n import org.apache.wicket.Page;\r\n import org.apache.wicket.markup.ComponentTag;\r\n import org.apache.wicket.markup.IMarkupFragment;\r\n-import org.apache.wicket.markup.Markup;\r\n import org.apache.wicket.markup.MarkupParser;\r\n import org.apache.wicket.markup.MarkupResourceStream;\r\n import org.apache.wicket.markup.parser.filter.InlineEnclosureHandler;\r\n@@ -47,8 +46,6 @@\n \r\n \tprivate static final Logger log = LoggerFactory.getLogger(InlineEnclosure.class);\r\n \r\n-\tprivate String enclosureMarkupAsString;\r\n-\r\n \t/**\r\n \t * Construct.\r\n \t * \r\n@@ -59,8 +56,6 @@ public InlineEnclosure(final String id, final String childId)\n \t{\r\n \t\tsuper(id, childId);\r\n \r\n-\t\tenclosureMarkupAsString = null;\r\n-\r\n \t\t// ensure that the Enclosure is ready for ajax updates\r\n \t\tsetOutputMarkupPlaceholderTag(true);\r\n \t\tsetMarkupId(getId());\r\n@@ -88,34 +83,6 @@ public boolean updateVisibility()\n \t}\r\n \r\n \t/**\r\n-\t * {@link InlineEnclosure}s keep their own cache of their markup because Component#markup is\r\n-\t * detached and later during Ajax request it is hard to re-lookup {@link InlineEnclosure}'s\r\n-\t * markup from its parent.\r\n-\t * \r\n-\t * @see org.apache.wicket.Component#getMarkup()\r\n-\t */\r\n-\t@Override\r\n-\tpublic IMarkupFragment getMarkup()\r\n-\t{\r\n-\t\tIMarkupFragment enclosureMarkup = null;\r\n-\t\tif (enclosureMarkupAsString == null)\r\n-\t\t{\r\n-\t\t\tIMarkupFragment markup = super.getMarkup();\r\n-\t\t\tif (markup != null && markup != Markup.NO_MARKUP)\r\n-\t\t\t{\r\n-\t\t\t\tenclosureMarkup = markup;\r\n-\t\t\t\tenclosureMarkupAsString = markup.toString(true);\r\n-\t\t\t}\r\n-\t\t}\r\n-\t\telse\r\n-\t\t{\r\n-\t\t\tenclosureMarkup = Markup.of(enclosureMarkupAsString, getWicketNamespace());\r\n-\t\t}\r\n-\r\n-\t\treturn enclosureMarkup;\r\n-\t}\r\n-\r\n-\t/**\r\n \t * @return the markup namespace for Wicket elements and attributes.\r\n \t */\r\n \tprivate String getWicketNamespace()\r\ndiff --git a/wicket-core/src/main/java/org/apache/wicket/markup/parser/filter/InlineEnclosureHandler.java b/wicket-core/src/main/java/org/apache/wicket/markup/parser/filter/InlineEnclosureHandler.java\nindex 7e9ea8e..507339b 100644\n--- a/wicket-core/src/main/java/org/apache/wicket/markup/parser/filter/InlineEnclosureHandler.java\n+++ b/wicket-core/src/main/java/org/apache/wicket/markup/parser/filter/InlineEnclosureHandler.java\n@@ -65,6 +65,12 @@\n \tprivate Stack<ComponentTag> enclosures;\r\n \r\n \t/**\r\n+\t * InlinceEnclosures are not removed after render as other auto-components,\r\n+\t * thus they have to have a stable id.\r\n+\t */\r\n+\tprivate int counter;\r\n+\r\n+\t/**\r\n \t * Construct.\r\n \t */\r\n \tpublic InlineEnclosureHandler()\r\n@@ -107,7 +113,8 @@ protected MarkupElement onComponentTag(final ComponentTag tag) throws ParseExcep\n \t\t\t\t{\r\n \t\t\t\t\tif (Strings.isEmpty(htmlId))\r\n \t\t\t\t\t{\r\n-\t\t\t\t\t\tString id = getWicketNamespace() + \"_\" + INLINE_ENCLOSURE_ID_PREFIX;\r\n+\t\t\t\t\t\tString id = getWicketNamespace() + \"_\" + INLINE_ENCLOSURE_ID_PREFIX +\r\n+\t\t\t\t\t\t\t(counter++);\r\n \t\t\t\t\t\ttag.setId(id);\r\n \t\t\t\t\t}\r\n \t\t\t\t\telse\r\n@@ -198,10 +205,7 @@ public Component resolve(final MarkupContainer container, final MarkupStream mar\n \t\tif (Strings.isEmpty(inlineEnclosureChildId) == false)\r\n \t\t{\r\n \t\t\tString id = tag.getId();\r\n-\t\t\tif (id.startsWith(getWicketNamespace(markupStream)))\r\n-\t\t\t{\r\n-\t\t\t\tid = id + container.getPage().getAutoIndex();\r\n-\t\t\t}\r\n+\r\n \t\t\t// Yes, we handled the tag\r\n \t\t\treturn new InlineEnclosure(id, inlineEnclosureChildId);\r\n \t\t}\r\n", 
  "project": "wicket", 
  "linesAdd": 9, 
  "jira_id": "5085", 
  "nb_skipped": 3, 
  "commit": "581c7306", 
  "nb_failure": 9, 
  "linesRem": 38
}