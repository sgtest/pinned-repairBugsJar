{
  "files": 2, 
  "nb_test": 3326, 
  "nb_error": 0, 
  "classification": {
    "singleLine": false
  }, 
  "failing_tests": [
    "testNextUniformExtremeValues(org.apache.commons.math.random.ISAACTest)", 
    "testNextIntNegativeToPositiveRange(org.apache.commons.math.random.ISAACTest): Chisquare test failed p-value = 0.0 chisquare statistic = 219.24800000000005.", 
    "value\texpected\tobserved", 
    "1\t0.11\t\t0", 
    "2\t0.11\t\t118", 
    "3\t0.11\t\t122", 
    "4\t0.11\t\t216", 
    "5\t0.11\t\t133", 
    "6\t0.11\t\t110", 
    "7\t0.11\t\t101", 
    "8\t0.11\t\t103", 
    "9\t0.11\t\t97", 
    "This test can fail randomly due to sampling error with probability 0.01.", 
    "testNextIntNegativeRange(org.apache.commons.math.random.ISAACTest): nextInt range", 
    "testNextLongNegativeToPositiveRange(org.apache.commons.math.random.ISAACTest): Chisquare test failed p-value = 0.0 chisquare statistic = 219.24800000000005.", 
    "value\texpected\tobserved", 
    "1\t0.11\t\t0", 
    "2\t0.11\t\t118", 
    "3\t0.11\t\t122", 
    "4\t0.11\t\t216", 
    "5\t0.11\t\t133", 
    "6\t0.11\t\t110", 
    "7\t0.11\t\t101", 
    "8\t0.11\t\t103", 
    "9\t0.11\t\t97", 
    "This test can fail randomly due to sampling error with probability 0.01.", 
    "testNextLongNegativeRange(org.apache.commons.math.random.ISAACTest): nextLong range", 
    "testNextUniformIAE(org.apache.commons.math.random.ISAACTest): MathIllegalArgumentException expected", 
    "testNextUniformUniformMaximalInterval(org.apache.commons.math.random.ISAACTest): nextUniform range", 
    "testNextUniformExtremeValues(org.apache.commons.math.random.Well512aTest)", 
    "testNextIntNegativeToPositiveRange(org.apache.commons.math.random.Well512aTest): Chisquare test failed p-value = 0.0 chisquare statistic = 258.03800000000007.", 
    "value\texpected\tobserved", 
    "1\t0.11\t\t0", 
    "2\t0.11\t\t106", 
    "3\t0.11\t\t114", 
    "4\t0.11\t\t237", 
    "5\t0.11\t\t121", 
    "6\t0.11\t\t107", 
    "7\t0.11\t\t93", 
    "8\t0.11\t\t111", 
    "9\t0.11\t\t111", 
    "This test can fail randomly due to sampling error with probability 0.01.", 
    "testNextIntNegativeRange(org.apache.commons.math.random.Well512aTest): nextInt range", 
    "testNextLongNegativeToPositiveRange(org.apache.commons.math.random.Well512aTest): Chisquare test failed p-value = 0.0 chisquare statistic = 258.03800000000007.", 
    "value\texpected\tobserved", 
    "1\t0.11\t\t0", 
    "2\t0.11\t\t106", 
    "3\t0.11\t\t114", 
    "4\t0.11\t\t237", 
    "5\t0.11\t\t121", 
    "6\t0.11\t\t107", 
    "7\t0.11\t\t93", 
    "8\t0.11\t\t111", 
    "9\t0.11\t\t111", 
    "This test can fail randomly due to sampling error with probability 0.01.", 
    "testNextLongNegativeRange(org.apache.commons.math.random.Well512aTest): nextLong range", 
    "testNextUniformIAE(org.apache.commons.math.random.Well512aTest): MathIllegalArgumentException expected", 
    "testNextUniformUniformMaximalInterval(org.apache.commons.math.random.Well512aTest): nextUniform range", 
    "testNextUniformExtremeValues(org.apache.commons.math.random.RandomDataTest)", 
    "testNextIntNegativeToPositiveRange(org.apache.commons.math.random.RandomDataTest): Chisquare test failed p-value = 0.0 chisquare statistic = 264.24800000000005.", 
    "value\texpected\tobserved", 
    "1\t0.11\t\t0", 
    "2\t0.11\t\t101", 
    "3\t0.11\t\t107", 
    "4\t0.11\t\t240", 
    "5\t0.11\t\t104", 
    "6\t0.11\t\t118", 
    "7\t0.11\t\t120", 
    "8\t0.11\t\t109", 
    "9\t0.11\t\t101", 
    "This test can fail randomly due to sampling error with probability 0.01.", 
    "testNextIntNegativeRange(org.apache.commons.math.random.RandomDataTest): nextInt range", 
    "testNextLongNegativeToPositiveRange(org.apache.commons.math.random.RandomDataTest): Chisquare test failed p-value = 0.0 chisquare statistic = 264.24800000000005.", 
    "value\texpected\tobserved", 
    "1\t0.11\t\t0", 
    "2\t0.11\t\t101", 
    "3\t0.11\t\t107", 
    "4\t0.11\t\t240", 
    "5\t0.11\t\t104", 
    "6\t0.11\t\t118", 
    "7\t0.11\t\t120", 
    "8\t0.11\t\t109", 
    "9\t0.11\t\t101", 
    "This test can fail randomly due to sampling error with probability 0.01.", 
    "testNextLongNegativeRange(org.apache.commons.math.random.RandomDataTest): nextLong range", 
    "testNextUniformIAE(org.apache.commons.math.random.RandomDataTest): MathIllegalArgumentException expected", 
    "testNextUniformUniformMaximalInterval(org.apache.commons.math.random.RandomDataTest): nextUniform range", 
    "testNextUniformExtremeValues(org.apache.commons.math.random.Well19937aTest)", 
    "testNextIntNegativeToPositiveRange(org.apache.commons.math.random.Well19937aTest): Chisquare test failed p-value = 0.0 chisquare statistic = 266.6240000000001.", 
    "value\texpected\tobserved", 
    "1\t0.11\t\t0", 
    "2\t0.11\t\t116", 
    "3\t0.11\t\t107", 
    "4\t0.11\t\t240", 
    "5\t0.11\t\t109", 
    "6\t0.11\t\t93", 
    "7\t0.11\t\t121", 
    "8\t0.11\t\t98", 
    "9\t0.11\t\t116", 
    "This test can fail randomly due to sampling error with probability 0.01.", 
    "testNextIntNegativeRange(org.apache.commons.math.random.Well19937aTest): nextInt range", 
    "testNextLongNegativeToPositiveRange(org.apache.commons.math.random.Well19937aTest): Chisquare test failed p-value = 0.0 chisquare statistic = 266.6240000000001.", 
    "value\texpected\tobserved", 
    "1\t0.11\t\t0", 
    "2\t0.11\t\t116", 
    "3\t0.11\t\t107", 
    "4\t0.11\t\t240", 
    "5\t0.11\t\t109", 
    "6\t0.11\t\t93", 
    "7\t0.11\t\t121", 
    "8\t0.11\t\t98", 
    "9\t0.11\t\t116", 
    "This test can fail randomly due to sampling error with probability 0.01.", 
    "testNextLongNegativeRange(org.apache.commons.math.random.Well19937aTest): nextLong range", 
    "testNextUniformIAE(org.apache.commons.math.random.Well19937aTest): MathIllegalArgumentException expected", 
    "testNextUniformUniformMaximalInterval(org.apache.commons.math.random.Well19937aTest): nextUniform range", 
    "testNextUniformExtremeValues(org.apache.commons.math.random.AbstractRandomGeneratorTest)", 
    "testNextIntNegativeToPositiveRange(org.apache.commons.math.random.AbstractRandomGeneratorTest): Chisquare test failed p-value = 0.0 chisquare statistic = 220.34600000000006.", 
    "value\texpected\tobserved", 
    "1\t0.11\t\t0", 
    "2\t0.11\t\t106", 
    "3\t0.11\t\t116", 
    "4\t0.11\t\t220", 
    "5\t0.11\t\t125", 
    "6\t0.11\t\t107", 
    "7\t0.11\t\t108", 
    "8\t0.11\t\t110", 
    "9\t0.11\t\t108", 
    "This test can fail randomly due to sampling error with probability 0.01.", 
    "testNextIntNegativeRange(org.apache.commons.math.random.AbstractRandomGeneratorTest): nextInt range", 
    "testNextLongNegativeToPositiveRange(org.apache.commons.math.random.AbstractRandomGeneratorTest): Chisquare test failed p-value = 0.0 chisquare statistic = 220.34600000000006.", 
    "value\texpected\tobserved", 
    "1\t0.11\t\t0", 
    "2\t0.11\t\t106", 
    "3\t0.11\t\t116", 
    "4\t0.11\t\t220", 
    "5\t0.11\t\t125", 
    "6\t0.11\t\t107", 
    "7\t0.11\t\t108", 
    "8\t0.11\t\t110", 
    "9\t0.11\t\t108", 
    "This test can fail randomly due to sampling error with probability 0.01.", 
    "testNextLongNegativeRange(org.apache.commons.math.random.AbstractRandomGeneratorTest): nextLong range", 
    "testNextUniformIAE(org.apache.commons.math.random.AbstractRandomGeneratorTest): MathIllegalArgumentException expected", 
    "testNextUniformUniformMaximalInterval(org.apache.commons.math.random.AbstractRandomGeneratorTest): nextUniform range", 
    "testNextUniformExtremeValues(org.apache.commons.math.random.Well44497aTest)", 
    "testNextIntNegativeToPositiveRange(org.apache.commons.math.random.Well44497aTest): Chisquare test failed p-value = 0.0 chisquare statistic = 271.07.", 
    "value\texpected\tobserved", 
    "1\t0.11\t\t0", 
    "2\t0.11\t\t106", 
    "3\t0.11\t\t116", 
    "4\t0.11\t\t243", 
    "5\t0.11\t\t102", 
    "6\t0.11\t\t107", 
    "7\t0.11\t\t106", 
    "8\t0.11\t\t100", 
    "9\t0.11\t\t120", 
    "This test can fail randomly due to sampling error with probability 0.01.", 
    "testNextIntNegativeRange(org.apache.commons.math.random.Well44497aTest): nextInt range", 
    "testNextLongNegativeToPositiveRange(org.apache.commons.math.random.Well44497aTest): Chisquare test failed p-value = 0.0 chisquare statistic = 271.07.", 
    "value\texpected\tobserved", 
    "1\t0.11\t\t0", 
    "2\t0.11\t\t106", 
    "3\t0.11\t\t116", 
    "4\t0.11\t\t243", 
    "5\t0.11\t\t102", 
    "6\t0.11\t\t107", 
    "7\t0.11\t\t106", 
    "8\t0.11\t\t100", 
    "9\t0.11\t\t120", 
    "This test can fail randomly due to sampling error with probability 0.01.", 
    "testNextLongNegativeRange(org.apache.commons.math.random.Well44497aTest): nextLong range", 
    "testNextUniformIAE(org.apache.commons.math.random.Well44497aTest): MathIllegalArgumentException expected", 
    "testNextUniformUniformMaximalInterval(org.apache.commons.math.random.Well44497aTest): nextUniform range", 
    "testNextUniformExtremeValues(org.apache.commons.math.random.BitsStreamGeneratorTest)", 
    "testNextIntNegativeToPositiveRange(org.apache.commons.math.random.BitsStreamGeneratorTest): Chisquare test failed p-value = 0.0 chisquare statistic = 190.59200000000007.", 
    "value\texpected\tobserved", 
    "1\t0.11\t\t0", 
    "2\t0.11\t\t115", 
    "3\t0.11\t\t109", 
    "4\t0.11\t\t204", 
    "5\t0.11\t\t110", 
    "6\t0.11\t\t121", 
    "7\t0.11\t\t109", 
    "8\t0.11\t\t112", 
    "9\t0.11\t\t120", 
    "This test can fail randomly due to sampling error with probability 0.01.", 
    "testNextIntNegativeRange(org.apache.commons.math.random.BitsStreamGeneratorTest): nextInt range", 
    "testNextLongNegativeToPositiveRange(org.apache.commons.math.random.BitsStreamGeneratorTest): Chisquare test failed p-value = 0.0 chisquare statistic = 190.59200000000007.", 
    "value\texpected\tobserved", 
    "1\t0.11\t\t0", 
    "2\t0.11\t\t115", 
    "3\t0.11\t\t109", 
    "4\t0.11\t\t204", 
    "5\t0.11\t\t110", 
    "6\t0.11\t\t121", 
    "7\t0.11\t\t109", 
    "8\t0.11\t\t112", 
    "9\t0.11\t\t120", 
    "This test can fail randomly due to sampling error with probability 0.01.", 
    "testNextLongNegativeRange(org.apache.commons.math.random.BitsStreamGeneratorTest): nextLong range", 
    "testNextUniformIAE(org.apache.commons.math.random.BitsStreamGeneratorTest): MathIllegalArgumentException expected", 
    "testNextUniformUniformMaximalInterval(org.apache.commons.math.random.BitsStreamGeneratorTest): nextUniform range", 
    "testNextUniformExtremeValues(org.apache.commons.math.random.Well1024aTest)", 
    "testNextIntNegativeToPositiveRange(org.apache.commons.math.random.Well1024aTest): Chisquare test failed p-value = 0.0 chisquare statistic = 230.31800000000004.", 
    "value\texpected\tobserved", 
    "1\t0.11\t\t0", 
    "2\t0.11\t\t116", 
    "3\t0.11\t\t125", 
    "4\t0.11\t\t224", 
    "5\t0.11\t\t108", 
    "6\t0.11\t\t104", 
    "7\t0.11\t\t116", 
    "8\t0.11\t\t97", 
    "9\t0.11\t\t110", 
    "This test can fail randomly due to sampling error with probability 0.01.", 
    "testNextIntNegativeRange(org.apache.commons.math.random.Well1024aTest): nextInt range", 
    "testNextLongNegativeToPositiveRange(org.apache.commons.math.random.Well1024aTest): Chisquare test failed p-value = 0.0 chisquare statistic = 230.31800000000004.", 
    "value\texpected\tobserved", 
    "1\t0.11\t\t0", 
    "2\t0.11\t\t116", 
    "3\t0.11\t\t125", 
    "4\t0.11\t\t224", 
    "5\t0.11\t\t108", 
    "6\t0.11\t\t104", 
    "7\t0.11\t\t116", 
    "8\t0.11\t\t97", 
    "9\t0.11\t\t110", 
    "This test can fail randomly due to sampling error with probability 0.01.", 
    "testNextLongNegativeRange(org.apache.commons.math.random.Well1024aTest): nextLong range", 
    "testNextUniformIAE(org.apache.commons.math.random.Well1024aTest): MathIllegalArgumentException expected", 
    "testNextUniformUniformMaximalInterval(org.apache.commons.math.random.Well1024aTest): nextUniform range", 
    "testNextUniformExtremeValues(org.apache.commons.math.random.Well44497bTest)", 
    "testNextIntNegativeToPositiveRange(org.apache.commons.math.random.Well44497bTest): Chisquare test failed p-value = 0.0 chisquare statistic = 208.75400000000005.", 
    "value\texpected\tobserved", 
    "1\t0.11\t\t0", 
    "2\t0.11\t\t110", 
    "3\t0.11\t\t105", 
    "4\t0.11\t\t212", 
    "5\t0.11\t\t131", 
    "6\t0.11\t\t116", 
    "7\t0.11\t\t104", 
    "8\t0.11\t\t102", 
    "9\t0.11\t\t120", 
    "This test can fail randomly due to sampling error with probability 0.01.", 
    "testNextIntNegativeRange(org.apache.commons.math.random.Well44497bTest): nextInt range", 
    "testNextLongNegativeToPositiveRange(org.apache.commons.math.random.Well44497bTest): Chisquare test failed p-value = 0.0 chisquare statistic = 208.75400000000005.", 
    "value\texpected\tobserved", 
    "1\t0.11\t\t0", 
    "2\t0.11\t\t110", 
    "3\t0.11\t\t105", 
    "4\t0.11\t\t212", 
    "5\t0.11\t\t131", 
    "6\t0.11\t\t116", 
    "7\t0.11\t\t104", 
    "8\t0.11\t\t102", 
    "9\t0.11\t\t120", 
    "This test can fail randomly due to sampling error with probability 0.01.", 
    "testNextLongNegativeRange(org.apache.commons.math.random.Well44497bTest): nextLong range", 
    "testNextUniformIAE(org.apache.commons.math.random.Well44497bTest): MathIllegalArgumentException expected", 
    "testNextUniformUniformMaximalInterval(org.apache.commons.math.random.Well44497bTest): nextUniform range", 
    "testNextUniformExtremeValues(org.apache.commons.math.random.MersenneTwisterTest)", 
    "testNextIntNegativeToPositiveRange(org.apache.commons.math.random.MersenneTwisterTest): Chisquare test failed p-value = 0.0 chisquare statistic = 213.39800000000005.", 
    "value\texpected\tobserved", 
    "1\t0.11\t\t0", 
    "2\t0.11\t\t113", 
    "3\t0.11\t\t110", 
    "4\t0.11\t\t216", 
    "5\t0.11\t\t126", 
    "6\t0.11\t\t112", 
    "7\t0.11\t\t109", 
    "8\t0.11\t\t100", 
    "9\t0.11\t\t114", 
    "This test can fail randomly due to sampling error with probability 0.01.", 
    "testNextIntNegativeRange(org.apache.commons.math.random.MersenneTwisterTest): nextInt range", 
    "testNextLongNegativeToPositiveRange(org.apache.commons.math.random.MersenneTwisterTest): Chisquare test failed p-value = 0.0 chisquare statistic = 213.39800000000005.", 
    "value\texpected\tobserved", 
    "1\t0.11\t\t0", 
    "2\t0.11\t\t113", 
    "3\t0.11\t\t110", 
    "4\t0.11\t\t216", 
    "5\t0.11\t\t126", 
    "6\t0.11\t\t112", 
    "7\t0.11\t\t109", 
    "8\t0.11\t\t100", 
    "9\t0.11\t\t114", 
    "This test can fail randomly due to sampling error with probability 0.01.", 
    "testNextLongNegativeRange(org.apache.commons.math.random.MersenneTwisterTest): nextLong range", 
    "testNextUniformIAE(org.apache.commons.math.random.MersenneTwisterTest): MathIllegalArgumentException expected", 
    "testNextUniformUniformMaximalInterval(org.apache.commons.math.random.MersenneTwisterTest): nextUniform range"
  ], 
  "patch": "diff --git a/src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java b/src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java\nindex cfec8ca..c5c14a9 100644\n--- a/src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java\n+++ b/src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java\n@@ -116,6 +116,7 @@\n     INDEX_OUT_OF_RANGE(\"index {0} out of allowed range [{1}, {2}]\"),\n     INDEX(\"index ({0})\"), /* keep */\n     NOT_FINITE_NUMBER(\"{0} is not a finite number\"), /* keep */\n+    INFINITE_BOUND(\"interval bounds must be finite\"),\n     ARRAY_ELEMENT(\"value {0} at index {1}\"), /* keep */\n     INFINITE_ARRAY_ELEMENT(\"Array contains an infinite element, {0} at index {1}\"),\n     INFINITE_VALUE_CONVERSION(\"cannot convert infinite value\"),\n@@ -240,6 +241,7 @@\n     NO_REGRESSORS(\"Regression model must include at least one regressor\"),\n     NO_RESULT_AVAILABLE(\"no result available\"),\n     NO_SUCH_MATRIX_ENTRY(\"no entry at indices ({0}, {1}) in a {2}x{3} matrix\"),\n+    NAN_NOT_ALLOWED(\"NaN is not allowed\"),\n     NULL_NOT_ALLOWED(\"null is not allowed\"), /* keep */\n     ARRAY_ZERO_LENGTH_OR_NULL_NOTALLOWED(\"A null or zero length array not allowed\"),\n     COVARIANCE_MATRIX(\"covariance matrix\"), /* keep */\ndiff --git a/src/main/java/org/apache/commons/math/random/RandomDataImpl.java b/src/main/java/org/apache/commons/math/random/RandomDataImpl.java\nindex 0fda688..16d655b 100644\n--- a/src/main/java/org/apache/commons/math/random/RandomDataImpl.java\n+++ b/src/main/java/org/apache/commons/math/random/RandomDataImpl.java\n@@ -36,6 +36,7 @@\n import org.apache.commons.math.distribution.TDistribution;\n import org.apache.commons.math.distribution.WeibullDistribution;\n import org.apache.commons.math.distribution.ZipfDistribution;\n+import org.apache.commons.math.exception.MathIllegalArgumentException;\n import org.apache.commons.math.exception.MathInternalError;\n import org.apache.commons.math.exception.NotStrictlyPositiveException;\n import org.apache.commons.math.exception.NumberIsTooLargeException;\n@@ -250,7 +251,8 @@ public int nextInt(int lower, int upper) {\n                                                 lower, upper, false);\n         }\n         double r = getRan().nextDouble();\n-        return (int) ((r * upper) + ((1.0 - r) * lower) + r);\n+        double scaled = r * upper + (1.0 - r) * lower + r;\n+        return (int)FastMath.floor(scaled);\n     }\n \n     /**\n@@ -270,7 +272,8 @@ public long nextLong(long lower, long upper) {\n                                                 lower, upper, false);\n         }\n         double r = getRan().nextDouble();\n-        return (long) ((r * upper) + ((1.0 - r) * lower) + r);\n+        double scaled = r * upper + (1.0 - r) * lower + r;\n+        return (long)FastMath.floor(scaled);\n     }\n \n     /**\n@@ -361,7 +364,9 @@ public int nextSecureInt(int lower, int upper) {\n                                                 lower, upper, false);\n         }\n         SecureRandom sec = getSecRan();\n-        return lower + (int) (sec.nextDouble() * (upper - lower + 1));\n+        double r = sec.nextDouble();\n+        double scaled = r * upper + (1.0 - r) * lower + r;\n+        return (int)FastMath.floor(scaled);\n     }\n \n     /**\n@@ -382,7 +387,9 @@ public long nextSecureLong(long lower, long upper) {\n                                                 lower, upper, false);\n         }\n         SecureRandom sec = getSecRan();\n-        return lower + (long) (sec.nextDouble() * (upper - lower + 1));\n+        double r = sec.nextDouble();\n+        double scaled = r * upper + (1.0 - r) * lower + r;\n+        return (long)FastMath.floor(scaled);\n     }\n \n     /**\n@@ -579,19 +586,26 @@ public double nextExponential(double mean) {\n      * provide a symmetric output interval (both endpoints excluded).\n      * </p>\n      *\n-     * @param lower\n-     *            the lower bound.\n-     * @param upper\n-     *            the upper bound.\n-     * @return a uniformly distributed random value from the interval (lower,\n-     *         upper)\n-     * @throws NumberIsTooLargeException if {@code lower >= upper}.\n+     * @param lower the lower bound.\n+     * @param upper the upper bound.\n+     * @return a uniformly distributed random value from the interval (lower, upper)\n+     * @throws MathIllegalArgumentException if {@code lower >= upper}\n+     * or either bound is infinite or NaN\n      */\n     public double nextUniform(double lower, double upper) {\n         if (lower >= upper) {\n-            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND,\n-                                                lower, upper, false);\n+            throw new MathIllegalArgumentException(LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND,\n+                                                lower, upper);\n+        }\n+\n+        if (Double.isInfinite(lower) || Double.isInfinite(upper)) {\n+            throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_BOUND);\n         }\n+\n+        if (Double.isNaN(lower) || Double.isNaN(upper)) {\n+            throw new MathIllegalArgumentException(LocalizedFormats.NAN_NOT_ALLOWED);\n+        }\n+\n         final RandomGenerator generator = getRan();\n \n         // ensure nextDouble() isn't 0.0\n@@ -600,7 +614,7 @@ public double nextUniform(double lower, double upper) {\n             u = generator.nextDouble();\n         }\n \n-        return lower + u * (upper - lower);\n+        return u * upper + (1.0 - u) * lower;\n     }\n \n     /**\n", 
  "project": "commons-math", 
  "linesAdd": 30, 
  "jira_id": "724", 
  "nb_skipped": 1, 
  "commit": "9c8bb934", 
  "nb_failure": 70, 
  "linesRem": 14
}