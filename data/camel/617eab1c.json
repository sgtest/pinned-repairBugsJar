{
  "files": 1, 
  "nb_test": 4686, 
  "nb_error": 0, 
  "classification": {
    "singleLine": false
  }, 
  "failing_tests": [
    "BeanOgnlBodyMethodReturnNullValueTest>TestSupport.runBare:58->testNullValue:42 expected:<foo: [null]; bar: test> but was:<foo: [org.apache.camel.component.bean.BeanOgnlBodyMethodReturnNullValueTest$ExamplePojo@fe96b09]; bar: test>", 
    "AggregateTimeoutTest>TestSupport.runBare:58->testAggregateTimeout:51 expected:<1> but was:<0>"
  ], 
  "patch": "diff --git a/camel-core/src/main/java/org/apache/camel/component/bean/MethodInfo.java b/camel-core/src/main/java/org/apache/camel/component/bean/MethodInfo.java\nindex 7160d3d..cc58c50 100644\n--- a/camel-core/src/main/java/org/apache/camel/component/bean/MethodInfo.java\n+++ b/camel-core/src/main/java/org/apache/camel/component/bean/MethodInfo.java\n@@ -512,13 +512,15 @@ private Object evaluateParameterValue(Exchange exchange, int index, Object param\n                     try {\n                         expression = exchange.getContext().resolveLanguage(\"simple\").createExpression(exp);\n                         parameterValue = expression.evaluate(exchange, Object.class);\n+                        // use \"null\" to indicate the expression returned a null value which is a valid response we need to honor\n+                        if (parameterValue == null) {\n+                            parameterValue = \"null\";\n+                        }\n                     } catch (Exception e) {\n                         throw new ExpressionEvaluationException(expression, \"Cannot create/evaluate simple expression: \" + exp\n                                 + \" to be bound to parameter at index: \" + index + \" on method: \" + getMethod(), exchange, e);\n                     }\n \n-                    if (parameterValue != null) {\n-\n                     // special for explicit null parameter values (as end users can explicit indicate they want null as parameter)\n                     // see method javadoc for details\n                     if (\"null\".equals(parameterValue)) {\n@@ -555,7 +557,6 @@ private Object evaluateParameterValue(Exchange exchange, int index, Object param\n                         }\n                     }\n                 }\n-                }\n \n                 return answer;\n             }\n", 
  "project": "camel", 
  "linesAdd": 4, 
  "jira_id": "6687", 
  "nb_skipped": 1, 
  "commit": "617eab1c", 
  "nb_failure": 2, 
  "linesRem": 3
}